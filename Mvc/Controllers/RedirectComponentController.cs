/* ------------------------------------------------------------------------------
<auto-generated>
    This file was generated by Sitefinity CLI v1.1.0.29
</auto-generated>
------------------------------------------------------------------------------ */

using SitefinityWebApp.Mvc.Models;
using System.Web.Mvc;
using Telerik.Sitefinity.Mvc;
using Telerik.Sitefinity.Personalization;
using System.IO;
using System.Linq;
using System.Net;
using Telerik.Sitefinity.Security.Claims;
using System;

namespace SitefinityWebApp.Mvc.Controllers
{
    [ControllerToolboxItem(Name = "RedirectComponent_MVC", Title = "RedirectComponent", SectionName = "CustomWidgets")]
    public class RedirectComponentController : Controller, IPersonalizable
    {
        // GET: RedirectComponent
        public ActionResult Index()
        {
            // get the current identity 

            var identity = ClaimsManager.GetCurrentIdentity();

            // get information about the user from the properties of the ClaimsIdentityProxy object

            var userName = identity.Name;
            var userId = identity.UserId;

            //Get time in unix long
            long unixTimestamp = (int)DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1)).TotalSeconds;

            //Get agent string
            string agentString = Request.Headers["User-Agent"].ToString();

            var httpWebRequest = (HttpWebRequest)WebRequest.Create("https://gadental.prolearn.io/api/auth/authorizeuserentry");
            httpWebRequest.ContentType = "application/json";
            httpWebRequest.Method = "POST";

            using (var streamWriter = new StreamWriter(httpWebRequest.GetRequestStream()))
            {
                string json = "{\"apivers\":\"11_15_11\",\"authtoken\":\"2e505400912827eac032234122937268\",\"time\":" + unixTimestamp + ",\"data\":{\"user\":{\"userid\":\"" + userId + "\",\"firstname\":\"pritam\",\"lastname\":\"s\",\"email\":\"" + userName + "\"},\"useragent\":\"" + agentString + "\"},\"apiclient\":\"APITester\"}";

                streamWriter.Write(json);
            }

            Response responseObject = new Response();

            var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();
            using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))
            {
                var res = streamReader.ReadToEnd();
                responseObject = Newtonsoft.Json.JsonConvert.DeserializeObject<Response>(res);
            }

            return Redirect(responseObject.data.demotesturl.Replace("//", "https://"));
            
        }

        protected override void HandleUnknownAction(string actionName)
        {
            this.ActionInvoker.InvokeAction(this.ControllerContext, "Index");
        }

        public string Message { get; set; }

        public class Data
        {
            public string userauthtoken { get; set; }
            public string demotesturl { get; set; }
            public string useragent { get; set; }
        }

        public class Response
        {
            public Data data { get; set; }
            public string status { get; set; }
        }
    }


}